Jurassic Park

Goal: Practice OO modelling in Java (unit tests, no UI)

You have been asked to create an app to manage the dinosaur population and visitor tracking of Jurassic Park. (No expense spared)

MVP

The user must be able to add paddocks, add / remove dinosaurs to paddocks, feed dinosaurs. You should also be able to transfer Herbivores between paddocks. :/

Project Extensions

Dinosaurs marked as herbivores can live in the same paddock but those marked as carnivores can only be placed with dinosaurs of the same type.
Dinosaurs can randomly rampage and break out of their paddocks.
Visitors can enter / exit the park if the dinosaurs are not rampaging.
View the number of visitors in the park at a given time.
Anything else you can dream up!


Sunday thoughts:

Additionals

If I get the MVP done soon, I'll consider the following -

Set up databases. This is most likely considered MVP in my eyes, not in project spec, but you need some kind of data persistence, would be useless otherwise.

Might try to also model wallets for the visitors if I have time, to allow them to shop etc. (Branching into other territory, I know, but still...)

Will most likely try model an app after the MVP is tested and done, but unsure how to go about it, could perhaps make the app as a visitor app, a staff app, or an overlord app.

Visitor app would probably be the easiest, as it would only involve them clicking paddocks to check what dinosaurs are there, and maybe shops to buy merchandise. It would probably be a phone app which tracks their position. Or potentially a wristband with a GPS tracker.

Overlord app would be tricky, and would probably have to include a random event function, where when you do something, a random event happens, ie potentially a dinosaur rampages and damages its dwelling place, forcing you to send staff there to repair. (During which another random event could occur) Would probably have visitors roaming too.



Monday thoughts:

Bit of a head scratcher today, thinking of what functionalities objects should have, and shouldn't. Maybe I'm overthinking things, but paddocks shouldn't be able to add humans to their lists. I think most of the problems lie in updating the locations of the people or dinosaurs, by removing them from the previous areas and putting them in the next area, while updating their locations. This is a bit tougher to deal with now the code has expanded. Wish I had thought about this earlier...

I'll do a bit of planning revision, and then probably refactor some functions. I'll hopefully have the park class done by tomorrow mid afternoon, and the runner completed by tomorrow evening.

Definitely need to test more, although I think I've tested a fair amount, even though I've only got 20 or so passing tests. I think I need to split tests up more.


Tuesday thoughts:

Bit of a muddle so far today. Tried to make the code more clean, but if I add even the smallest change to the location updates, it breaks about 15 tests. Should focus on the building of the park first and then sort out the location stuff.

Location problems - When I update the dinosaur locations, it should remove them from the previous location and add to new one, then set its location. Same with humans. I think it does this from the testing, but it should be clearer in the code that it does this.
